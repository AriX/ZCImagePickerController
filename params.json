{"name":"ZCImagePickerController","tagline":"","body":"### SCREEN SHOT\r\n---\r\n\r\n### FEATURES\r\n---\r\n1. Simulate the UI and user experience of UIImagePickerController.\r\n2. `Videos and photos are supported`, just like the UIImagePickerController.\r\n3. **Support setting the maximum number of photos and videos that the user can\r\nselect at one time**.\r\n4. `Localization supported.` English, Simplified Chinese and Traditional Chinese are supported.\r\n5. Auto reload albums when user modify photos and videos in the default photos app.\r\n6. Support ARC.\r\n7. Support iPhone and iPad.\r\n\r\n>  Require OS : iOS5 or later\r\n>  \r\n>  Require Frameworks:\r\n>  \r\n> * AssetsLibrary.framework\r\n> * QuartzCore.framework\r\n\r\n### HOW TO USE\r\n---\r\n\r\nThe image picker is created and displayed in a very similar way of the UIImagePickerController. The demo application shows how it is used.\r\n\r\n```\r\nZCImagePickerController *imagePickerController = [[ZCImagePickerController alloc] init];\r\nimagePickerController.imagePickerDelegate = self;\r\nimagePickerController.maximumAllowsSelectionCount = 5;\r\nimagePickerController.mediaType = ZCMediaAllAssets;\r\n    \r\nif ([UIDevice currentDevice].userInterfaceIdiom == UIUserInterfaceIdiomPad) {\r\n        \r\n\t// You should present the image picker in a popover on iPad.\r\n        \r\n\t_popoverController = [[UIPopoverController alloc] initWithContentViewController:imagePickerController];\r\n\t[_popoverController presentPopoverFromRect:_launchButton.frame inView:self.view permittedArrowDirections:UIPopoverArrowDirectionAny animated:YES];\r\n}\r\nelse {\r\n\t// Full screen on iPhone and iPod Touch.\r\n        \r\n\t[self.view.window.rootViewController presentViewController:imagePickerController animated:YES completion:NULL];\r\n}\r\n```\r\n\r\nThe ZCImagePickerController will return the select images back to the ZCImagePickerControllerDelegate. The delegate contains to methods very similar to the ZCImagePickerControllerDelegate. Instead of returning one dictionary representing a single image the controller sends back an array of similarly structured dictionaries. The two delegate methods are:\r\n\r\n```\r\n- (void)zcImagePickerController:(ZCImagePickerController *)imagePickerController didFinishPickingMediaWithInfo:(NSArray *)info;\r\n- (void)zcImagePickerControllerDidCancel:(ZCImagePickerController *)imagePickerController;\r\n```\r\n\r\n### LICENSE\r\n---\r\n\r\nThe MIT License\r\n\r\nCopyright Â© 2013 ZCCStudio\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}